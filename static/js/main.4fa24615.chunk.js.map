{"version":3,"sources":["logo.svg","WalletAmountList.js","EditWalletAmount.js","AddWalletAmount.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WalletAmountList","props","className","amountList","length","map","amt","key","id","date","description","income","amount","onClick","editWalletAmount","deleteWalletAmount","colSpan","EditWalletAmount","console","log","type","name","value","onChange","handleInputChange","updatedWalletAmount","setEditing","AddWalletAmount","style","marginTop","width","onSubmit","addWalletAmount","App","state","userId","status","walletAmount","editing","bind","event","target","this","setState","preventDefault","statu","filter","item","window","location","reload","updatedDate","updatedDescription","updatedIncome","updatedAmount","Object","assign","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fa24615.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n  const WalletAmountList = (props) => {\n    return (  \n      <table className=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Income/Expense</th>\n            <th>Amount</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n            { \n              props.amountList.length > 0 ? (\n                props.amountList.map((amt) => (\n                    <tr key={amt.id}>\n                      <td>{ amt.id }</td>\n                      <td>{ amt.date }</td>\n                      <td>{ amt.description }</td>\n                      <td>{ amt.income}</td>\n                      <td>{ amt.amount}</td>\n                      <td>\n                        <button className=\"btn btn-primary ml-2\" onClick={() => props.editWalletAmount(amt) }>Edit</button>\n                        <button className=\"btn btn-danger ml-2\" onClick={() => props.deleteWalletAmount(amt.id) }>Delete</button>\n                      </td>\n                    </tr>\n                  )\n                )\n              ) : (\n                <tr>\n                  <td colSpan={3}>No Data Display...</td>\n                </tr>\n              )\n            }\n        </tbody>\n      </table>\n    );\n  }\n\n\nexport default WalletAmountList;\n\n\n","import React from 'react'\n\nconst EditWalletAmount = props => {\n  console.log(\"editttttt\",props)\n  return (\n    <form>\n       <div className=\"form-group\">\n        <label>Date:</label>\n        <input type=\"date\" className=\"form-control\" name=\"date\" value={props.date} onChange={ props.handleInputChange}/>\n      </div>\n      <div className=\"form-group\">\n        <label>Description:</label>\n        <input type=\"text\" className=\"form-control\" name=\"description\" value={props.description} onChange={ props.handleInputChange} />\n      </div>\n      <div className=\"form-group\">\n        <label>Income/Expense:</label>\n        <input type=\"number\" className=\"form-control\" name=\"income\" value={props.income} onChange={ props.handleInputChange} />\n      </div>\n      <div className=\"form-group\">\n        <label>Amount:</label>\n        <input type=\"number\" className=\"form-control\" name=\"amount\" value={props.amount} onChange={ props.handleInputChange} />\n      </div>\n      <button onClick={ props.updatedWalletAmount } className=\"btn btn-success mt-2\"> Update </button>\n      <button onClick={() => props.setEditing(false)} className=\"btn btn-info mt-2\">Cancel</button>\n    </form>\n  )\n}\n\nexport default EditWalletAmount;","import React from 'react'\n\nconst AddWalletAmount = props => {\n  return (\n\n\n<div style={{ marginTop: 10 , width: 721 }}>\n            <form onSubmit={props.addWalletAmount}>\n                <div className=\"form-group\">\n                    <label>Date : </label>\n                    <input type=\"date\" className=\"form-control\" name=\"date\" value={props.date} onChange={ props.handleInputChange}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Description: </label>\n                    <input type=\"text\" className=\"form-control\" name=\"description\" value={props.description} onChange={ props.handleInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Income/Expense: </label>\n                    <input type=\"number\" className=\"form-control\" name=\"income\" value={props.income} onChange={ props.handleInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Amount: </label>\n                    <input type=\"number\" className=\"form-control\" name=\"amount\" value={props.amount} onChange={ props.handleInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" \n                      value=\"Create Wallet\" \n                      className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n  )\n}\n\nexport default AddWalletAmount;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport WalletAmountList from './WalletAmountList';\nimport './App.css';\nimport EditWalletAmount from './EditWalletAmount';\nimport AddWalletAmount from './AddWalletAmount';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      userId: 1,\n      date: '',\n      description: '',\n      income: '',\n      amount:'',\n      status: false,\n      walletAmount: {},\n      amountList: [],\n      editing: false\n    };\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.deleteWalletAmount = this.deleteWalletAmount.bind(this);\n    this.addWalletAmount = this.addWalletAmount.bind(this);\n    this.editWalletAmount = this.editWalletAmount.bind(this);\n    this.setEditing = this.setEditing.bind(this);\n    this.updatedWalletAmount = this.updatedWalletAmount.bind(this);\n  }\n\n  handleInputChange(event) {\n    \n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n \n    this.setState({\n      [name]:value\n    })\n  }\n\n  addWalletAmount(event){\n    console.log(\"etttt--\")\n    console.log(\"event---\",this.state.income)\n    event.preventDefault()\n    if (!this.state.date) return;\n    const walletAmount = {\n      id: this.state.amountList.length + 1,\n      date: this.state.date,\n      description: this.state.description,\n      income: this.state.income,\n      amount:this.state.amount,\n      userId: this.state.userId,\n      statu: this.state.status\n    };\n\n    console.log(walletAmount);\n    this.setState({\n      date: '',\n      description: '',\n      income:'',\n      amount:'',\n      walletAmount: walletAmount,\n      amountList: [...this.state.amountList, walletAmount]\n    })\n    console.log(this.state.amountList);\n  }\n\n  deleteWalletAmount(id) {\n    const amountList = this.state.amountList.filter( item => item.id !== id );\n    this.setState({amountList: amountList});\n    if(this.state.editing === true) {\n      window.location.reload();\n    }\n  }\n\n  editWalletAmount(amount) {\n    this.setEditing(true);\n    this.setState({\n      date:amount.date,\n      description:amount.description,\n      income:amount.income,\n      amount:amount.amount,\n      walletAmount: amount\n    });\n    // console.log(walletAmount);\n  }\n\n  setEditing(value) {\n    if(typeof value !== 'boolean') { throw \" This value must either be true or false\"}\n    this.setState({\n      editing: value\n    })\n  }\n\n  updatedWalletAmount(event) {\n    event.preventDefault();\n    const updatedDate = this.state.date;\n    const updatedDescription = this.state.description;\n    const updatedIncome = this.state.income;\n    const updatedAmount = this.state.amount;\n    const updatedWalletAmount = Object.assign({}, this.state.walletAmount, { date: updatedDate, description: updatedDescription, income: updatedIncome , amount: updatedAmount})\n    const amountList = this.state.amountList.map((walletAmount) => (walletAmount.id === this.state.walletAmount.id ? updatedWalletAmount : walletAmount));\n    this.setState({ date:'', description: '',income:'',amount:'', amountList: amountList});\n  }\n\n  render() {\n    const { description, date, amountList, editing } = this.state;\n      return (\n        <div className=\"App\">\n          <div className=\"row App-main\">\n            <WalletAmountList \n              amountList= {amountList} \n              deleteWalletAmount={this.deleteWalletAmount}\n              editWalletAmount={this.editWalletAmount}\n            />\n          </div>\n          <div className=\"row App-main\">\n          { \n            editing  ? (\n            <EditWalletAmount \n             date={this.state.date}\n             description={this.state.description} \n             income={this.state.income}\n             amount={this.state.amount}\n             handleInputChange={this.handleInputChange}\n             setEditing={this.setEditing}\n             updatedWalletAmount={this.updatedWalletAmount}\n            />\n            ) : (\n            <AddWalletAmount \n              date={this.state.date}\n              description={this.state.description} \n              income={this.state.income}\n              amount={this.state.amount}\n              handleInputChange={this.handleInputChange} \n              addWalletAmount={this.addWalletAmount}\n            />\n            )\n          }\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}